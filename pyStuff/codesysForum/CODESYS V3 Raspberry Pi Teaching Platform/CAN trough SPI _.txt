Is there(or will there ever be?) any mean to use CAN with an expansion board like this one : http://www.industrialberry.com/can-controller/ with the raspberry pi and CodeSys?I think this would be a pretty awesome featureAlso is there any mean to programm custom SPI libraries(i'm thinking of making an ADC board and use analog inputs in codesys logic)THanks for this great product!

I suggest to the developers to seriously think about making CAN/CANOpen supported in some way or another too. Both for educational purposes (for the "Teaching" part in "Raspberry Pi Teaching Platform") and for purposes of actually using this in automotive and other fields, where CAN slaves are either already present as a standard or cheaply available.ProfiBus/Profinet solutions on the other hand tend to be rather expensive (compared to CANOpen counterparts) due to licensing etc. At least in my personal experience.

And its also easy to build your own messages to communicate on a higher layer protocol (thinking of J1939 and CANopen(if just sharing PDO) )I played a little bit with codesys 3, i use Codesys 2.5 at work everyday, i think the J1939 Library seems pretty awesome, it gives you the latitude to configure custom messages wich is good, but could we get to lower layer with the pi and just send and recieve raw CAN messages?

While working woth codesys 3.5 on the new ECU I'm using at work, I understood that if the CAN driver is integrated at the system level you can use it directly in codesys with the low-level coding.

Hi,if anyone manage to build his own Linux kernel with socketcan support,this will work with the 3S runtime. The needed parts in the runtime are in.And if you have socketcan running, even J1939 will work out of the box, everything needed is on board in CODESYS IDEBREdwin

Edwin,I managed to find a SPI Can Module that works with the PIhttp://www.mikroe.com/click/pi-shield/http://www.mikroe.com/click/can-spi-3.3v/Using the following I got the SPI to show up as an socketcan adapter by using the following stepshttp://lnxpps.de/rpie/http://tech.enekochan.com/en/2014/03/08/upgradedowngrade-to-a-specific-firmware-kernel-version-with-rpi-update-in-raspbian/#Need to downgrade to match copied modules raspberrypi 3.12.22+sudo rpi-update bfd37013c701f10c6df585346ee1d3d3bdf88b3b   cd /tmp; wget http://lnxpps.de/rpie/rpi-can-3.12.22+.tar.bz2# untar the archive: cd /; sudo tar jxvf /tmp/rpi-can-3.12.22+.tar.bz2 # you normally should'nt do that# register modules: sudo depmod -a# and do asudo rebootmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releasemodprobe spi-bcm2708modprobe canmodprobe can-devmodprobe can-rawmodprobe can-bcmmodprobe mcp251xip link set can0 up type can bitrate 250000service codesyscontrol startAttachment:SPI Can.jpgWhat I can not get working is CoDesys to recognize the PI to have CAN.  Whenever I add the CanManager it will give me compile message that the hardware does not match the controller.  Attachment:SPI Can2.jpgThanks

_________________The Original SoMachine Ninja

Hi,Thanks for reporting this,could you give me the messages from the plc log?RegardsEdwin

Edwin,As requested here are the attached log files.  To give you more info I am still using demo version codesyscontrol_V3.5.4.0.deb.  I also noticed I was not loading all the modules required for SocketCan.  Please notice I updated the steps up above along with the Dmesg output screenshot.  Also I do not load the codesyscontrol service until all modules are loaded.  Let me know if you need any further information.

_________________The Original SoMachine Ninja

Hi,please use the 3.5.5.0 version of the runtime, then it might work, to be honest I did test it but I will do it.Best regardsEdwin

Same problem using CODESYS_3.5SP5Patch1_Release and Raspberry Pi CoDeSys Control Version: 2.0.0.0 aka codesyscontrol_arm_raspberry_V3.5.5.0.deb.  See Attached PLClogs.  FYI I know cansocket is working because I can use candump and monitor traffic off a PLC with CanOpen master.  Do you have to add any additional components under ComponentManager section in  CODESYSControl.cfg?

_________________The Original SoMachine Ninja

Hi,you need to add the Component 2-5 into /etc/CODESYSControl.cfg [ComponentManager]Component.1=CmpOpenSSLComponent.2=CmpCAACanL2Component.3=CmpCAASdoServerComponent.4=CmpCAASdoClientComponent.5=CmpSocketCanDrvIf you have a running SocketCAN implementation in your Linux Kernel, this should work.(This is not the case in the delivered standard wheezy image which comes with the store download!)RegardsEdwin

Edwin,Now I can download to the PI without error but Canbus still does not work.  See attached PLClog.  It gives Script: rts_set_baud.sh not found- can 0 will not work.  With CanSocket I bring up the Canbus and match the bus speed used in the Codesys program.  This is the command I use to bring up the adapter:ip link set can0 up type can bitrate 250000Also I have disable the Codesyscontrol service on boot up.  If I don't CanSocket will not load because Codesyscontrol locks control.  I believe is caused by Codesyscontrol locking out SPI driver.  If I load CanSocket first then start Codesyscontrol it will let me download but as above Can still is not working.

_________________The Original SoMachine Ninja

Hi,beside the problem with the baudrate script, which we could workaround with using the same baudrate as you set with ip link set can0 up type can bitrate 250000.This line with the missing license file may lead to the read triangle in the device tree on the left side and maybe to an not working CAN.How do you start the plc manually it seems that the runtime does not find the licensefile?BREdwin

Edwin,I am still using the demo version. I can purchase a license if required.  Right now I am playing with different images and different PI's.  My plan was to buy a license once I get Canbus working.  This way I do not have keep moving the license when using a new image or PI.I have to done the following:#1  Disable codesyscontrol at boot up#This was required because CanSocket does not want to load if codesyscontrol is first loadedsudo update-rc.d codesyscontrol disable  reboot#2  Load all required drivers and start CanSocketmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releasemodprobe spi-bcm2708modprobe canmodprobe can-devmodprobe can-rawmodprobe can-bcmmodprobe mcp251xip link set can0 up type can bitrate 250000#3  Start codesyscontrolservice codesyscontrol start#4  From windows download the codesys program with Canbus->Canopen Manager#5 Start PLC from windows codesys

_________________The Original SoMachine Ninja

Hi,no, you do not need to purchase a license, but please use 3.5.5.0 because then you have the same version that I use and in my case I do not see the error in the log: license file missing - License File missing -> think fieldbus will not workeven not in Demo mode.The limitation of the demo pi runtime is:All fieldbus feature are running but the runtime quits after 2h of working in full mode.So for sure you do not need to buy a license for our tests.BREdwin

Edwin,  The error in the log: license file missing - License File missing only happens when I modified the /etc/CODESYSControl.cfg  with the CanBus lines.  If take out the CanBus in the codesys program and I comment out the lines below and restart the codesyscontrol service it does not have an error.  See attached screenshot.#/etc/CODESYSControl.cfg  CanBus commented out[ComponentManager]Component.1=CmpOpenSSL;Component.2=CmpCAACanL2;Component.3=CmpCAASdoServer;Component.4=CmpCAASdoClient;Component.5=CmpSocketCanDrv

_________________The Original SoMachine Ninja

Hi,I need to reproduce this with real CAN hardware, at the moment I have only a Piwithout PiCan. Give me a few day's to investigate it.BREdwin

Edwin,Thanks.  Let me know if you need remote access to my PI.Also if the creator of the pre-compiled modules would also compile the virtual driver, true hardware would not be required for testing.  I did not have the time to set up a cross compiler to compile the modules myself. I will try to e-mail the creator if he would also include the virtual driver.  jzhvymetal

_________________The Original SoMachine Ninja

Hi jzhvymetal,I've tested this now,to be honest not with MCP2515 (because my hardware seems to be somehow broken)I've used Peak CAN Dongle but this makes no difference both are based on socketcan.How does it work:You need to copy the rts_set_baud.sh to the /root/ directory and make it executeable by chmod +x rts_set_baud.sh #!/bin/shCAN_NUM=$(echo $1 | sed 's,^can\([0-9]*\).*,\1,')./pcan /dev/pcanusb$CAN_NUM $2(In case of MCP2515 check if you need to modify it slightly)For other users reading this post:For using peak usb can or MCP2515 CAN interface it is needed to compile the kernel and enable CAN and the modules/interfaces which you want to use. This is the missing part - but we could not add this to the standard store image - becausethere is a lot of effort to test it and the experience till now was that on high load you might loose CAN Messages.BREdwin

Hi jzhvymetal,now additional for others and you the description how it works with MCP2515 PICan interface.@jzhvymetal skip the parts with the kernel update.. you need only the scripts to set the baud and the start the runtime after loading the can modules.http://skpang.co.uk/catalog/pican-canbu ... -1196.htmlI have used the how to on that link:http://www.raspberrypi.org/forums/viewt ... &start=550Summerize:Write following commands in terminal:sudo rpi-update bfd37013c701f10c6df585346ee1d3d3bdf88b3b #rebootcd /tmp; wget http://lnxpps.de/rpie/rpi-can-3.12.22+.tar.bz2cd /; sudo tar jxvf /tmp/rpi-can-3.12.22+.tar.bz2sudo depmod -asudo rebootsudo modprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releasesudo modprobe mcp251xsudo ip link set can0 up type can bitrate 250000sudo ip -s -d link show can0At this point CAN works now (under Linux Wheezy)What is additional needed to run it in the CODESYS runtime:add in /etc/CODESYSControl.cfg[ComponentManager]Component.1=CmpOpenSSLComponent.2=CmpCAACanL2Component.3=CmpCAASdoServerComponent.4=CmpCAASdoClientComponent.5=CmpSocketCanDrvthen for testing purpose add a script in /home/pi startplc.sh  (this is needed for have the right start order.. 1. load modules .2 start plc)#!/bin/shsudo /etc/init.d/codesyscontrol stopsudo modprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releasesudo modprobe mcp251xsudo ip link set can0 up type can bitrate 250000sudo ip -s -d link show can0sudo /etc/init.d/codesyscontrol startthis stops the runtimeload the modulesand starts the plc againadditional you need a script in the runtime directory (in our case /root)cat /root/rts_set_baud.sh#!/bin/shBITRATE=`expr $2 \\* 1000`ifconfig $1 downecho ip link set $1 type can bitrate $BITRATEip link set $1 type can bitrate $BITRATEifconfig $1 upLet's see if this work for you and others tooand let's see how stable the implementation is (according of losing messages etc)BR Edwin

Edwin,I am still having trouble with the CAN SPI model with codesys.  I can get the can SPI working directly from the console and able to send message to my PeakCan usb adapter. Attachment:Can Send OK.jpg As soon as I start the codesyscontrol by typing the following "service codesyscontrol start" the Can adapter drops out.  If I type ifconfig the can0 is no longer listed.  Also if type dmesg I get the following output that repeats[  482.345440] mcp251x spi0.0: MCP251x didn't enter in conf mode after resetAttachment:CAN CoDeSys Not Ok.jpgIt looks like when I run the codesyscontrol service it trys to reinitialize SPI causing the CAN apapter to drop out.Also you no longer have to use the older Raspbian 3.10.22+ there is a new complied version of the drivers for the latest kernel Raspbian 3.12.28+ (http://lnxpps.de/rpie/)

_________________The Original SoMachine Ninja

Hi,think at this point we should check online together...Think you should send a pm to arrange this.BREdwin

Edwin,I got CAN Bus working.  The problem was the GPIO pins for the interrupt for mcp251x (GPIO17 in my case) and for some reason GPIO04 need to be disabled in the Codesys program.  Also every time you do a full download it will reinitialize the GPIO pins which causes the CAN SPI module to stop working.   This does not happen if you disable all the GPIO pin in the Codesys program.

_________________The Original SoMachine Ninja

Edwin,I have some good news to report.  The modules for SPI and MCP251x are buggy in the tree.  The good news is there are updates outside the main tree that fix the problems.MCP2515 SPI CAN Uses the spi_async API directly for improved performance.http://git.pengutronix.de/?p=mkl/linux-2.6.git;a=commit;h=7d88d3d6142152d2edd42aefdf79058138b23e1dspi-bcm2708 SPI master driver with DMA support for the Raspberry Pihttps://github.com/notro/spi-bcm2708https://github.com/notro/spi-bcm2708/wikiAfter compiling and updating the kernel and modules, CanBus has been going no stop for the 2 hour demo (Still have not purchased a license).  I was able to have a 1ms cyclic with data changing on a remote I/O(OTB) every 5ms.  This was done by having the output wired directly into an input on the remote I/O unit(OTB).  See the attached screenshotAttachment:Can Codesys Working.jpgAttached is a procedure to cross compile all modules/kernel/canutils using Ubuntu.  Also provided is the compiled modules for the current latest kernel.Attachment:Ubuntu Compile RPI CANBUS kernel v1.txt

_________________The Original SoMachine Ninja

Edwin,I did a stress testing using the CanEcho program and USB PCAN adapter.  Running the 1ms cyclic task for the CanEcho program and had PCANView sending every 2ms with CanBus set for 250kbps.  The results show that every transmission was echoed by the PI with no drop outs for 8hours and still going.   I just can not explain why the PI transmitted more message than the PCAN transmitted.  Any case I am impressed by the results.  This was done with a non-optimized PI without overclocking.Attachment:Pi CoDeSys Can Stress Test.jpg

_________________The Original SoMachine Ninja

hi,Wow, this sounds good!Meanwhile a second user verified that loss of can messages is solved by using the description.BREdwin

jzhvymetal,Have you get the CanOpen fully working on your Codesys raspPI? If yes what is the right procedure. Im strugling with my PICAN (www.skpang.co.uk) classic SPI mcp2515 controller.I can get the RxTx messages in terminal, so what is the next procedure? How to implement it with Codesys do i need any script? I don't understand the implementation with codesys quite well...regards, Alex

Alex,Yes CAN bus is fully working with the PI.   I had to use a modified mcp2515 driver to prevent communication from dropping out.  Download the attachment from above it gives you step by step procedure required to get CAN bus working with CoDeSys

_________________The Original SoMachine Ninja

Is there any plan on integrating this patch into the official codesys-store available image soon ? (Since it's been confirmed to be a working solution.) Cheers

Hi,at the moment not, is there anyone who want to provide us with an additional debian packagewhich add the CAN support?BREdwin

Hi jzhvymetal,Do you mind to sharing the wiring connection between Raspberry PI+ with the CAN SPI over here?Thank you.John lee

I use the followinghttp://www.mikroe.com/click/pi-shield/http://www.mikroe.com/click/can-spi-3.3v/if you want to build your own there is a drawing herehttp://lnxpps.de/rpie/

_________________The Original SoMachine Ninja

hi jzhvymetal,Thank you for your information. I'm going to test out the circuit and let your all know the status.

Hi all,I tried to make the CAN run on the rpi using the following instructions posted by jzhvymetal. THX, in advance, the guidance helped a lot  My problem now is that I could not load the drivers on the rpi. If I follow the last steps of the guidance I have to load the drivers using these lines, but a few of the commands returned errors pi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/drivers/spi/spi-bcm2708.ko realtimeError: could not insert module /lib/modules/3.12.28+/kernel/drivers/spi/spi-bcm2708.ko: File existspi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/net/can/can.koError: could not insert module /lib/modules/3.12.28+/kernel/net/can/can.ko: File existspi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/drivers/net/can/can-dev.kopi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/net/can/can-raw.koError: could not insert module /lib/modules/3.12.28+/kernel/net/can/can-raw.ko: File existspi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/net/can/can-bcm.kopi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/extra/spi-config.kopi@raspberrypi ~ $ devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releasepi@raspberrypi ~ $ sudo insmod /lib/modules/3.12.28+/kernel/drivers/net/can/mcp2515.kopi@raspberrypi ~ $ ip link set can0 up type can bitrate 250000 restart-ms 100 triple-sampling onCannot find device "can0"Checking the kernel log afterwards, I got these:...Jan 24 14:22:00 raspberrypi kernel: [    5.331639] bcm2708_spi bcm2708_spi.0: DMA channel 4 at address 0xf2007400 with irq 20Jan 24 14:22:00 raspberrypi kernel: [    5.527024] bcm2708_spi bcm2708_spi.0: DMA channel 5 at address 0xf2007500 with irq 21Jan 24 14:22:00 raspberrypi kernel: [    5.780079] bcm2708_spi bcm2708_spi.0: SPI Controller at 0x20204000 (irq 80)Jan 24 14:22:00 raspberrypi kernel: [    5.959039] bcm2708_spi bcm2708_spi.0: SPI Controller running in dma modeJan 24 14:22:00 raspberrypi kernel: [    6.368107] bcm2708-i2s bcm2708-i2s.0: Failed to create debugfs directoryJan 24 14:22:00 raspberrypi kernel: [   10.740693] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)Jan 24 14:22:00 raspberrypi kernel: [   11.321773] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)Jan 24 14:22:00 raspberrypi kernel: [   12.303374] bcm2708_i2c_init_pinmode(1,2)Jan 24 14:22:00 raspberrypi kernel: [   12.312180] bcm2708_i2c_init_pinmode(1,3)Jan 24 14:22:00 raspberrypi kernel: [   12.324416] bcm2708_i2c bcm2708_i2c.1: BSC1 Controller at 0x20804000 (irq 79) (baudrate 100000)Jan 24 14:22:00 raspberrypi kernel: [   12.480642] pcm512x 1-004d: Failed to reset device: -5Jan 24 14:22:00 raspberrypi kernel: [   12.480767] pcm512x: probe of 1-004d failed with error -5Jan 24 14:22:00 raspberrypi kernel: [   12.481175] pcm512x 1-004c: Failed to reset device: -5Jan 24 14:22:00 raspberrypi kernel: [   12.481269] pcm512x: probe of 1-004c failed with error -5Jan 24 14:22:00 raspberrypi kernel: [   12.541974] i2c /dev entries driverJan 24 14:22:00 raspberrypi kernel: [   17.957006] FAT-fs (mmcblk0p1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.Jan 24 14:22:00 raspberrypi kernel: [   20.595928] smsc95xx 1-1.1:1.0 eth0: hardware isn't capable of remote wakeupJan 24 14:22:00 raspberrypi kernel: [   22.231989] smsc95xx 1-1.1:1.0 eth0: link up, 100Mbps, full-duplex, lpa 0x41E1Jan 24 14:22:00 raspberrypi kernel: [   86.140630] Driver for 1-wire Dallas network protocol.Jan 24 14:22:00 raspberrypi kernel: [   86.160779] w1-gpio w1-gpio: gpio pin 4, gpio pullup pin 1Jan 24 14:22:02 raspberrypi kernel: [   90.408256] Adding 102396k swap on /var/swap.  Priority:-1 extents:1 across:102396k SSFSJan 24 14:22:05 raspberrypi kernel: [   93.077965] can: controller area network core (rev 20120528 abi 9)Jan 24 14:22:05 raspberrypi kernel: [   93.078154] NET: Registered protocol family 29Jan 24 14:22:05 raspberrypi kernel: [   93.128952] can: raw protocol (rev 20120528)...Hope you guys can help me!THX in advanceStefan

Hi KennyD,Can you kindly advice which version of the Linux your using?Just for your information, i have using the Linux where given from Codesys Store, and follow the step given by Edwin Schwellinger. I able to get the CAN SPI driver load into the Linux(Without doing the kernel complied).But the most difficultly is the step to make the Can Bus attach to the Codesys RunTime.As i'm newbie to Linux, it take me a long way walk thru the step given by Edwin Schwellinger. However tmr i going to test out the integrated with Codesys Run Time.Once i get it will update here again.And once again thanks to the jzhvymetal provide me the information of the wiring of the SPI Can, it really helpful.John Lee

All make sure you when you initalize you Can Driver you have the clock and IRQ correct.   Also make note that when you start a codesys PI program all input pins are assigned directly to CoDeSys.  Make sure inside the CoDeSys program to turn off the I/O assigned to IRQ PIN.The click board uses the followinghttp://www.mikroe.com/click/pi-shield/http://www.mikroe.com/click/can-spi-3.3v/IRQ PIN=17CLOCK=10Mhzmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releaseThis link  http://lnxpps.de/rpie/ circuit uses the followingIRQ PIN=25CLOCK=16Mhzmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_release

_________________The Original SoMachine Ninja

Hi to all, I simple question. With the experience write in this thread, Codesys can send only raw can bus message or can use the Codesys also the canopen protocol ? In other words, If I want to communicate with a standard DS401 canopen I/O module, it is possible ? Also if I have nr 3  DS402 servodrive it is possible to use Softmotion CNC to make 3D path (example 3 axis CNC milling machine)? THanks Giuliano

HiQuote:,I simple question. With the experience write in this thread, Codesys can send only raw can bus message or can use the Codesys also the canopen protocol ?CANopen protocolQuote:In other words, If I want to communicate with a standard DS401 canopen I/O module, it is possible ?yesQuote:Also if I have nr 3 DS402 servodrive it is possible to use Softmotion CNC to make 3D path (example 3 axis CNC milling machine)?no, missig a realtime Linux kernel patch to have realtime capabilities.BREdwin

jzhvymetal wrote:All make sure you when you initalize you Can Driver you have the clock and IRQ correct.   Also make note that when you start a codesys PI program all input pins are assigned directly to CoDeSys.  Make sure inside the CoDeSys program to turn off the I/O assigned to IRQ PIN.The click board uses the followinghttp://www.mikroe.com/click/pi-shield/http://www.mikroe.com/click/can-spi-3.3v/IRQ PIN=17CLOCK=10Mhzmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releaseThis link  http://lnxpps.de/rpie/ circuit uses the followingIRQ PIN=25CLOCK=16Mhzmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releaseHi jzhvymetal,I build the following using your post from Tue Sep 30, 2014 7:29 am :Linux raspberrypi 3.12.28+ #1 PREEMPT Sat Jan 24 00:05:53 CET 2015 armv6l GNU/LinuxI'm also able to load all necessary modules to get the device can0. I also use your first named configuration because I use the "CAN SPI Click" boardmodprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_releaseAfter this I wanna test the CAN connection by using some can tools like cansend or candump, but I can't establish any connection i.e. I could not see any incoming or outgoing CAN messages.Could you help me out of this?Cheers and many many thanks in advanceStefan

Hardware:http://www.mikroe.com/click/pi-shield/http://www.mikroe.com/click/can-spi-3.3v/Version of Codesys RSPI:2.1.1.0, Raspian 3.18Precompile Raspian Kernel with SPI CAN driver can download from this website(include different version, just select the version you needed)http://ifinterface.com/page/page3.php?langid=1 You can using usb thumb driver to transfer the files into RSPI via below methodhttp://www.raspberrypi-spy.co.uk/2014/0 ... pberry-pi/or You can using filezila to transfer the files as below methodhttp://trevorappleton.blogspot.sg/2014/ ... -your.htmlStep to replace kernel files with CAN Bus support :-1. Make sure your raspbian is the latest version by update and upgrade itsudo apt-get updatesudo apt-get upgradesudo apt-get cleansudo reboot.2. Now your raspbian is update and upgrade with the lastet version, you can using uname -a to check the version of your raspbian3. using one of the above method transfer the precompile kernel files (rpi-can-3.18.7+.tar.bz2) into your /home/pi/ 4. Once your files already copy into /home/pi and do below stepcd /sudo tar -xjf ~/rpi-can-3.18.7+.tar.bz2sudo depmod -asudo reboot5. Now your raspbian already have the kernel where support the SPI Can bus.6. To let the raspbian everytime startup willl autoload your SPI Can bus do below stepsudo nano /etc/modules7. Enter below code inside it:    spi_bcm2835    spi-config devices=\    bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=17:pd=20:pds32-0=10000000:pdu32-4=0x2002:force_release    mcp251x8. Press Ctrl + o, then press enter to save the files. 9. Precc Ctrl + x , to exit.10. sudo reboot, when reboot the time if you connect the monitor you can see one of the command is load sucess of the SPI CAN.11. Above step i refer from this web siteshttp://tiqni.com/raspberry-pi/can-bus-s ... spberry-pi12. Now we have follow the step where given from Edwin from Codesys to make the can bus work on the Codesys.13. As refer older post from Edwin it request us to enable the can bus on /etc/CODESYSControl.cfg as belowadd in/etc/CODESYSControl.cfg[ComponentManager]Component.1=CmpOpenSSLComponent.2=CmpCAACanL2Component.3=CmpCAASdoServerComponent.4=CmpCAASdoClientComponent.5=CmpSocketCanDrv14. However the latest version of the RSPI Codesys it already enable so you can skip this.15. in /home/pisudo nano startplc.sh16. Enter below thing#!/bin/shsudo /etc/init.d/codesyscontrol stopsudo modprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releasesudo modprobe mcp251xsudo ip link set can0 up type can bitrate 250000sudo ip -s -d link show can0sudo /etc/init.d/codesyscontrol start17. Press Ctrl + o , then press enter to save the files. Press Ctrl + x to exit18. this stops the runtime, load the modules ,and starts the plc again19. additional you need a script in the runtime directory (in our case /root)sudo /root/rts_set_baud.sh20. Enter below code#!/bin/shBITRATE=`expr $2 \\* 1000`ifconfig $1 downecho ip link set $1 type can bitrate $BITRATEip link set $1 type can bitrate $BITRATEifconfig $1 up21. press Ctrl + o , then press enter to save the files, press ctrl + x to exit.22. Do a reboot, now your good to go.23. I like to modify the files via using nano rather than vi, you can use your own method to modify the files as you want.24. I have download the CANBUS example from Codesys Store and tester with above setup. It work well to me.Hope above step can help most of them who like to explorer on the CAN BUS with RSPI Codesys.

Hi everyone,I followed all the steps above and CANbus and CANopen_manager seem to work fine but I still cannot communicate with my Festo Servo Drive through CANopen.Can someone help me please.Here's what it looks like on the Codesys side:And on the Festo side:

Hi,I tried many different ways how to get CAN working on Raspberry Pi 2 model B with codesys control, but nothing helped.Has anyone managed to get it working on rpi 2B and how?Quote:Precompile Raspian Kernel with SPI CAN driver can download from this website(include different version, just select the version you needed)http://ifinterface.com/page/page3.php?langid=1 The problem is that the precompiled raspbian kernel does not support raspberry 2.My hardware: http://www.rlx.sk/sk/usb-spi-i2c-rs232- ... 1-mbs.htmlCodesys control 35620Raspberry Kernel 3.18.7-v7+ (can be upgraded to 4.0.y trough rpi-update)Thank youFilip

Hi Firrel,I am actually trying same thing.From hardware you can try this tutorial http://skpang.co.uk/blog/archives/1165.It is not the same board but it is the same chip (mcp2515) so normally it will work fine.For me it is both with 4.0.9-v7+ or 3.18.16-v7+ , I can do #cansend from one RPi2 and do #candump from another RPi2, both with a PiCAN board and I see can frames trough CAN bus. Don't forget the 120 ohm resistor on the line.For Codesys, I don't actually have but I am working on it, I will post something when it will work.

any update?

Does this work on a PI2 or just a PI1?

Hi guys,For me it works on a Pi2 but I was helped from Codesys support team, thanks to them !Please if you need help be more specific and tell which step is not working for you, etc.

What process did you follow to get it to work on a P2?

I tried to get my CAN bus working tonight but no luck.Here are the steps I followed:Step to replace kernel files with CAN Bus support :-1. Make sure your raspbian is the latest version by update and upgrade itsudo apt-get updatesudo apt-get upgradesudo apt-get cleansudo reboot.2. Now your raspbian is update and upgrade with the lastet version, you can using uname -a to check the version of your raspbianReturned: Linux raspberrypi 4.1.19-v7+ #858 SMP Tue Mar 15 15:56:00 GMT 2016 armv7l GNU/Linux3. using one of the above method transfer the precompile kernel files (rpi-can-3.18.7+.tar.bz2) into your /home/pi/ Didn't do this because I thought the updates fixed needing to do this now4. Once your files already copy into /home/pi and do below stepcd /sudo tar -xjf ~/rpi-can-3.18.7+.tar.bz2sudo depmod -asudo rebootdidn't do this5. Now your raspbian already have the kernel where support the SPI Can bus.6. To let the raspbian everytime startup willl autoload your SPI Can bus do below stepsudo nano /etc/modules7. Enter below code inside it:spi_bcm2835spi-config devices=\bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releasemcp251x8. Press Ctrl + o, then press enter to save the files. 9. Precc Ctrl + x , to exit.10. sudo reboot, when reboot the time if you connect the monitor you can see one of the command is load sucess of the SPI CAN.11. Above step i refer from this web siteshttp://tiqni.com/raspberry-pi/can-bus-s ... spberry-pi12. Now we have follow the step where given from Edwin from Codesys to make the can bus work on the Codesys.13. As refer older post from Edwin it request us to enable the can bus on /etc/CODESYSControl.cfg as belowadd in/etc/CODESYSControl.cfg[ComponentManager]Component.1=CmpOpenSSLComponent.2=CmpCAACanL2Component.3=CmpCAASdoServerComponent.4=CmpCAASdoClientComponent.5=CmpSocketCanDrv14. However the latest version of the RSPI Codesys it already enable so you can skip this.15. in /home/pisudo nano startplc.sh16. Enter below thing#!/bin/shsudo /etc/init.d/codesyscontrol stopsudo modprobe spi-config devices=bus=0:cs=0:modalias=mcp2515:speed=10000000:gpioirq=25:pd=20:pds32-0=16000000:pdu32-4=0x2002:force_releasesudo modprobe mcp251xsudo ip link set can0 up type can bitrate 250000sudo ip -s -d link show can0sudo /etc/init.d/codesyscontrol start17. Press Ctrl + o , then press enter to save the files. Press Ctrl + x to exit18. this stops the runtime, load the modules ,and starts the plc again19. additional you need a script in the runtime directory (in our case /root)sudo /root/rts_set_baud.sh20. Enter below code#!/bin/shBITRATE=`expr $2 \\* 1000`ifconfig $1 downecho ip link set $1 type can bitrate $BITRATEip link set $1 type can bitrate $BITRATEifconfig $1 up21. press Ctrl + o , then press enter to save the files, press ctrl + x to exit.22. Do a reboot, now your good to go.23. I like to modify the files via using nano rather than vi, you can use your own method to modify the files as you want.24. I have download the CANBUS example from Codesys Store and tester with above setup. It work well to me.I followed the step by step proceedure except I didnt update the kernal because I was under the impression that the new version of software included the correct kernal.Any idea what I'm doing wrong? I try to run codesys with the can manager but its not runningI am using a CAN hardware http://www.aliexpress.com/store/product ... eId=627093

OK. Looks like I might have it. I replaced the 8mhz crystal on the can hardware to 16mhz and Its transmitting a heart beat which I am reading from another can sniffer. No I need to figure out how to create custom messages. I'd like to communicate to an arduino using the same hardware and trigger it to turn on and off outputs as well as setting pwm signals. just need to figure out how to use the messages to do that.

OK. Now Im trying to write code to read all messages on the J1939 Canbus. How do I go about doing that?I looked at the example but I couldnt figure out how it is linked to the canbus module. does anyone have any other example code I could look at?

Hi,according your ardoino question check the example here (Layer2 communication) http://store.codesys.com/mixedsearch/mi ... duct_area=and J1939 see screenshot.BREdwin

I looked at the example code but I am unable to determine how the code is linked to the specific J1939 ecu in the tree.Also, If the CAN messages are controlled within the program, Why is there a spot to select TX and RX PNG messages in the device?Is there a manual on how to use CAN with Codesys?

Hi,sorry to confuse you with that.The device tree screenshot is not relatet with the store example.CANApi projct from store is for CAN Layer 2 communication.J1939 from my screenshot is only to Show how to configure J1939 devices by this configurator pagesBREdwin

Edwin,Is it possible to write a small example for me to read and write a j1939 message using CANpi. I am still confused with using the TX RX entries in the device tree.

http://www.industrialberry.com/can-bus-with-codesys/they have RPI+CANbus work with codesys. is possible also work with CANopen to add device CANopen?

sure if this implementation is stable (SocketCAN)you could use:Pi as CANopen Master is possiblePi as CANopen Slave is possiblePi using for CAN Layer 2 communication (Store CAN API example)Pi using J1939 BREdwin

Edwin,Can you please Explain when you would use all the PNG RX and TX messages in the device tree under the can ecu module? Can you explain the different ways of communicating over CAN with the Pi? You talked about layer 2 which I assume is a level in which all message transactions are performed on a software level within the codesys program. There does however look to be another layer inwhich you can use the RX and TX PNG messages directly within the device tree. Can you explain the difference and how to use the device tree message selections?

i have raspberry pi 3 with pican 2 rev B  i make all setting but the can interface i don't see in cosesys , i check the can interface with candump and receive all packet Please help me to config can interface

First, thank you to all of you have contributed to this thread.  Using this, I am able to mostly get everything working.  I am using RPI3 and Codesys v3.5 sp9 sp1 and the PiCAN2.  I have a CANOpen bus coupler and have installed the manufacturers EDS file.  The Canbus and CANOpen_manager run fine.  However, when I try to run the Can slave device, I get the following errors.Any advice on how to trouble-shoot this?  Attachment:rpi12016-10-02_18-59-34.jpgAny advice/suggestions on where to get started?

Hi,please set the Compiler define: CANOPEN_DEBUGAfter that (compile,download,start the project) check the plc logger for more CANopen debug InformationBREdwin

I do have exactly the same problem, that I can not get CANopen running properly.My setup is: 2x Raspberry Pi 3 with CanberryDual 2.1, connected to each other. SocketCAN is working properly and I can send CAN messages from one Raspberry Pi to the next and vice versa. Also in CodeSys, the SocketCAN driver is working properly as CAN messages are received if I configure one Pi as a CANopen slave that produces heartbeat messages.What I did is configure one Pi as a CANopen slave, export the EDS file to the other Pi that adds this CANopen device.However, the CANopen manager says it is not running. After added CANOPEN_DEBUG, I noticed in the PLC log that it remains stuck in the SDO exchange phase. The message is: SDO read timeout for object 16#1000sub16#00, AbortCode: 16#05040000.Appreciated if someone can give some guidance what goes wrong here?

Hello everybody,first thank you very much for the fantastic descriptions. I got everything running with J1939.But why couldn't i get it running with CANOpen? Which CANOpen-Modul in Codesys do i have to choose.Thanks for helpingTimo

_________________Ich freue mich besonders über die Besucher auf meinem Blog die auch einen Kommentar hinterlassen...

PI can success with NiRen Pi mcp2515...  was one problem.. in  /boot/config.txtdtparam=spi=ondtoverlay=mcp2515-can0,oscillator=8000000,interrupt=25dtoverlay=spi1-2csI have 8Mhz oscill .. and maximum speed limit on Canopen 500kbs. For 1Mbs needed 16Mhz osill on canoprn board.. and  chip selesct in my case 2nd dtoverlay=spi1-2csFrom another sime PC with Runtime and PeakUSB working fine. Pi was tested as salve and as master on canopen bus.And have to connect 5V separate to TJA1050 as here descrbed. https://vimtut0r.com/2017/01/17/can-bus ... nel-4-4-x/

[quote="yannickasselin1"]Hi everyone,I followed all the steps above and CANbus and CANopen_manager seem to work fine but I still cannot communicate with my Festo Servo Drive through CANopen.Can someone help me please.Yannick, Did you ever resolve this problem? I am trying to do the exact same thing with RPI and 3 axis CMMP-AS.  Please let me know if you did.

You can show screen with PDO and SDO configuration?

