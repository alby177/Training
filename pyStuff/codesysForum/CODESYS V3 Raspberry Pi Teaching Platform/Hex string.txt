Hi all,I have converted an array of bytes into a string. Worked like a charm with the oscat function btw. Now i have to put it into hex-values. Any way to create a string with hex values? Thanks

You can make your own solution by using two offsets.  Look at each byte. If it is >=10 then add 55 to it (A is ascii 65).  For smaller number, add ascii offset for 0 - sorry don't remember if it is 40 or 42).  Examine bytes from highest to lowest and con at your chars. There is probably a prebuilt function somewhere, but it may take you longer searching for it than building it.

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

scott_cunningham wrote:You can make your own solution by using two offsets.  Look at each byte. If it is >=10 then add 55 to it (A is ascii 65).  For smaller number, add ascii offset for 0 - sorry don't remember if it is 40 or 42).  Examine bytes from highest to lowest and con at your chars. There is probably a prebuilt function somewhere, but it may take you longer searching for it than building it.OK that's great but still facing a major problem for me. Let's say i got value 58 in one byte. Then i want it displayed as 3A. (Hex is 4 bits). And i don't see any solution in it then

58 = 0011 1010 in binary.  Hex uses four bits (nibble).  You have to look at the upper four bits (3), then the lower four bits (A).A WORD uses two bytes (four nibbles) and can have a number from 0000 to FFFF hex.A BYTE uses one byte (two nibbles) and can have a number from 00 to FF hex.Here is a crude function to convert a BYTE to a two char string.  It is up to you to expand it for longer variable types...FUNCTION BYTE_TO_HEX_STRING : STRINGVAR_INPUT	Input : BYTE;END_VARVAR	Temp : BYTE;	Chr  : BYTE;	Ans  : STRING;END_VARTemp := SHR(Input, 4);IF Temp > 9 THEN	Chr := Temp + 55;ELSE	Chr := Temp + 48;END_IFAns[0] := Chr;Temp := SHR(SHL(Input,4),4); //wipes upper nibble (could also mask...)IF Temp > 9 THEN	Chr := Temp + 55;ELSE	Chr := Temp + 48;END_IFAns[1] := Chr;Ans[2] := 0; //null charBYTE_TO_HEX_STRING := Ans;

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

scott_cunningham wrote:58 = 0011 1010 in binary.  Hex uses four bits (nibble).  You have to look at the upper four bits (3), then the lower four bits (A).A WORD uses two bytes (four nibbles) and can have a number from 0000 to FFFF hex.A BYTE uses one byte (two nibbles) and can have a number from 00 to FF hex.Here is a crude function to convert a BYTE to a two char string.  It is up to you to expand it for longer variable types...FUNCTION BYTE_TO_HEX_STRING : STRINGVAR_INPUT	Input : BYTE;END_VARVAR	Temp : BYTE;	Chr  : BYTE;	Ans  : STRING;END_VARTemp := SHR(Input, 4);IF Temp > 9 THEN	Chr := Temp + 55;ELSE	Chr := Temp + 48;END_IFAns[0] := Chr;Temp := SHR(SHL(Input,4),4); //wipes upper nibble (could also mask...)IF Temp > 9 THEN	Chr := Temp + 55;ELSE	Chr := Temp + 48;END_IFAns[1] := Chr;Ans[2] := 0; //null charBYTE_TO_HEX_STRING := Ans;Thanks I managed to get it to work for longer variable types. Worked like a charm 

