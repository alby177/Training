I have several identical subsystems that can have many different fault conditions. It would be extremely time-consuming and error-prone if I put separate alarm conditions for each subsystem in the alarm configuration:Code:Expression                            Type     Class      MessagePLC_PRG.systems[0].material.consumed  DIG=1    WARNING    Material depleted on system 0PLC_PRG.systems[0].material.jammed    DIG=1    INTERLOCK  Material jammed on system 0PLC_PRG.systems[0].sensor.blocked     DIG=1    INTERLOCK  Sensor blocked on system 0...PLC_PRG.systems[1].material.consumed  DIG=1    WARNING    Material depleted on system 1PLC_PRG.systems[1].material.jammed    DIG=1    INTERLOCK  Material jammed on system 1PLC_PRG.systems[1].sensor.blocked     DIG=1    INTERLOCK  Sensor blocked on system 1...PLC_PRG.systems[2].......PLC_PRG.systems[3].......Is there a way that I could use placeholders like this?Code:Where i := 0 TO 5Expression                              Type     Class      MessagePLC_PRG.systems[$i$].material.consumed  DIG=1    WARNING    Material depleted on system $i$PLC_PRG.systems[$i$].material.jammed    DIG=1    INTERLOCK  Material jammed on system $i$PLC_PRG.systems[$i$].sensor.blocked     DIG=1    INTERLOCK  Sensor blocked on system $i$...I would be okay with using some function to manually add the alarm to the alarm table, too. Something like:Code:FOR i := 0 TO 5 DO  IF systems[i].material.consumed THEN    message := CONCAT('Material depleted on system ', SINT_TO_STRING(i));    NewAlarm(      expr := 'PLC_PRG.systems[i].material.consumed',      type := ALARMTYPE_DIG1,      class := 'WARNING',      priority := 0,      msg := message      );  END_IF  ...END_FORAs long as I don't have to change six pieces of code to fix one bug!

apart from the expr where you use [i] (which will not work) it is good.you will have to keep in your own array the status as this is lost due to the loop.

_________________shooter@home.nlcomputer shooterpaul deelenjacob van wassenaerstraat 29NL 5224 GG 's-Hertogenboschskype shooter paul.deelenphone +31736139136

shooter wrote:apart from the expr where you use [i] (which will not work) it is good.you will have to keep in your own array the status as this is lost due to the loop.The NewAlarm function doesn't really exist. I just put it there to show what kind of function I'm looking for. (In the real thing, I'm going to CONCAT the value of i into expr -- provided that something like NewAlarm really exists.) I am already storing the status in my own array; I am trying to cause an alarm whenever any subsystem faults. The difficult thing is, I want to:1) Have the message show which of the many subsystems faulted, and2) Not have to maintain six different copies of the alarm, the only difference being the i variable.My question again: Is there a way to do this?

