For our controllers with more functionality (more time to compile and generate code) i have sporadic problems with the login function, which returns sometimes with an exception. It seems that there is a timing problem within the function:Good case:Skript Meldungen: Information: codesysServerScript.py(464 in download_and_run@443):                 online_application.login(OnlineChangeOption.Never, True)Übersetzen: Text: C0: ------ Build started: Application: DeviceUnderTest.Application -------Übersetzen: Text: C0: The application is up to dateÜbersetzen: Text: C0: Kompilierung abgeschlossen -- 0 Fehler, 0 WarnungenÜbersetzen: Text: C0: ------ Build started: Application: DeviceUnderTest.Application -------Übersetzen: Text: C0: The application is up to dateÜbersetzen: Text: C0: generate code...Übersetzen: Text: C0: generate global initializations ...Übersetzen: Text: C0: generate code initialization ...Übersetzen: Text: C0: generate relocations ...Übersetzen: Information: C0: Size of generated code: 77820 bytesÜbersetzen: Information: C0: Size of global data: 16318 bytesÜbersetzen: Information: C0: Total allocated memory size for code and data: 120272 bytesÜbersetzen: Information: C0: Memory area 0 contains  Data, Input, Output, Memory and Nonsafe Data: size: 131072 bytes, highest used address: 42432, largest contiguous memory gap: 88640 bytes (67 %)Übersetzen: Information: C0: Memory area 1 contains  Code: size: 131072 bytes, highest used address: 77840, largest contiguous memory gap: 53232 bytes (40 %)Übersetzen: Text: C0: Build complete -- 0 errors, 0 warnings : ready for download!Bad case:Skript Meldungen: Information: codesysServerScript.py(464 in download_and_run@443):                 online_application.login(OnlineChangeOption.Never, True)Übersetzen: Text: C0: ------ Build started: Application: DeviceUnderTest.Application -------Übersetzen: Text: C0: typify code ...Übersetzen: Text: C0: Kompilierung abgeschlossen -- 0 Fehler, 0 WarnungenSkript Meldungen: Information: codesysServerScript.py(464 in download_and_run@443): Ausnahmefehler (<type 'exceptions.Exception'>, Exception('Einloggen fehlgeschlagen...',), <traceback object at 0x000000000000008E>)For workaround i run the function 3 or 4 times in a row.It never happend with the GUI.

Hi PLKM.PLKM wrote:For our controllers with more functionality (more time to compile and generate code) i have sporadic problems with the login function, which returns sometimes with an exception. It seems that there is a timing problem within the function:Bad case:Skript Meldungen: Information: codesysServerScript.py(464 in download_and_run@443):                 online_application.login(OnlineChangeOption.Never, True)Übersetzen: Text: C0: ------ Build started: Application: DeviceUnderTest.Application -------Übersetzen: Text: C0: typify code ...Übersetzen: Text: C0: Kompilierung abgeschlossen -- 0 Fehler, 0 WarnungenSkript Meldungen: Information: codesysServerScript.py(464 in download_and_run@443): Ausnahmefehler (<type 'exceptions.Exception'>, Exception('Einloggen fehlgeschlagen...',), <traceback object at 0x000000000000008E>)For workaround i run the function 3 or 4 times in a row.It never happend with the GUI.Which version of CODESYS do you use? Is the project just loaded before the login?Instead of repeating the login you can try to add a delay with system.delay(x) before the login. For the start I would use 5000ms and reduce it step by step if it works.BRMartin

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbHInspiring Automation Solutions

I use SP10 Patch 1 and there is no interaction with CODESYS at least 15 seconds before the login method.I already tried it with System.Delay(x) before the login, but the failure still exists.If i pregenerate the code with the generate_code() method it seems to be better, but the failure is still available sporadically.

Hi PLKM.PLKM wrote:I already tried it with System.Delay(x) before the login, but the failure still exists.If i pregenerate the code with the generate_code() method it seems to be better, but the failure is still available sporadically.You can try to use RaiseIdle() in combination with system.delay(). There are a few things in CODESYS which are executed with the Idle event. Call RaiseIdle(EventArgs.Empty) and system.delay(500) a few times before the login.If that does not help we could have a problem in the noUI mode which we need to investigate.Code:import clrclr.AddReference("System.Windows.Forms")from System.Windows.Forms import Applicationfrom System import EventArgsApplication.RaiseIdle(EventArgs.Empty)What is your Use Case for using the noUI mode?BRMartin

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbHInspiring Automation Solutions

M.Keller wrote:Hi PLKM.PLKM wrote:I already tried it with System.Delay(x) before the login, but the failure still exists.If i pregenerate the code with the generate_code() method it seems to be better, but the failure is still available sporadically.You can try to use RaiseIdle() in combination with system.delay(). There are a few things in CODESYS which are executed with the Idle event. Call RaiseIdle(EventArgs.Empty) and system.delay(500) a few times before the login.If that does not help we could have a problem in the noUI mode which we need to investigate.Code:import clrclr.AddReference("System.Windows.Forms")from System.Windows.Forms import Applicationfrom System import EventArgsApplication.RaiseIdle(EventArgs.Empty)What is your Use Case for using the noUI mode?BRMartinThe RaiseIdle Method seems to help. I will do some more tests in the next days.The noUI mode is for automated tests for our controllers, which are running in the background.

