Hi all,I'm new to Python scripts and I am wondering if this is possible to script:Before finishing a project I always run a couple of Find and Replace actions (with regex), for example:Find: [\t ]+(\n)Replace: $1Can I make a Python script that automates this process? So it runs a couple of Find and replace actions in a row?Will it use native CODESYS Find and replace functionality, or do I just program a regex search in Python?Thanks

Hi swtroelofs.swtroelofs wrote:Will it use native CODESYS Find and replace functionality, or do I just program a regex search in Python?Not at the moment but you could use the IScriptTextDocument interface to search and change the Structured Text (ST) parts of the POUs.Here some example code for finding the textual parts:Code:def getFullName(obj):   str = ""   while obj is not None and not obj.is_root:      str = obj.get_name() + '.' + str      obj = obj.parent   return strproj = projects.primary# Iterate through all children of the projectfor child in proj.get_children(True):   hasDecl = child.has_textual_declaration   hasImpl = child.has_textual_implementation   if hasDecl or hasImpl:      print("=== Object with text: {} declaration={} implementation={}".format(getFullName(child), hasDecl, hasImpl))      if hasDecl:         declaration = child.textual_declaration         print("Length of declaration: " + str(declaration.length))         print("Content of declaration:\n<code>")         print(declaration.text)         print("</code>")      if hasImpl:         implementation = child.textual_implementation         print("Length of implementation: " + str(implementation.length))         print("Content of implementation:\n<code>")         print(implementation.text)         print("</code>")To change the content of a textual part you use the method replace(new_content). There are more methods you can use, see the Scripting API documentation.BRMartin

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbHInspiring Automation Solutions

