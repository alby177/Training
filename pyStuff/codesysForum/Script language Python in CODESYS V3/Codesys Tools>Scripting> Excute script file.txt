is somting like this possible #!/usr/bin/env python# Years till 100import sysname = sys.argv[1]age = int(sys.argv[2])diff = 100 - ageprint 'Hello', name + ', you will be 100 in', diff, 'years!'Give this program a name of years.py, be sure to give it execute permission and then run it with the following command: ./years.py Joe 25Maybe this is a beter exsample what i try to build.import sysProjectName = sys.argv[0]ProjectNumber = sys.argv[1]#ProjectName ="Frukar, Barendrecht" #ProjectNumber ="121079" #Vanaf deze regel hoef er niks meer worden aangepast of veranderd wordenlean up any open project:if projects.primary:    projects.primary.close()    print("--- CleanUp finishedake the directory for the Automation department.ProjectPathAutomation ='4. Automation\\2. PLC\\1. CoDeSys\\2. Project\\'NewProjectName = ProjectName.replace(',', '_')CreateProjectName = "%s_%s" % (NewProjectName, ProjectNumber)AutomationPath = "L:\\" + ProjectName + "\\" + ProjectNumber + "\\" + ProjectPathAutomation + CreateProjectName + ".project"PROJECT = r"" + AutomationPathprint("--- The project create en save it on the next location : " + PROJECT + ".---")#Make the directory for the Electro department.ProjectPathElectro = '3. Elektro\\2. PLC IO\\'ElectroPath = "L:\\" + ProjectName + "\\" + ProjectNumber + "\\" + ProjectPathElectro + "Import.txt"print("--- The next import location are by use :" + ElectroPathmport PathF = open(r"" + ElectroPath , "r")# Library PathL = open(r"C:\Codesys Python Script\Library Import.txt", "r")# Symbols Name PathS = open(r"C:\Codesys Python Script\Library Import.txt", "r")

Currently, it is not possible to give parameters to scripts which are executed during the UI.We have an improvement CDS-42003 in our tracker to improve this (but it is not yet scheduled).However, it is possible to pass arguments to scripts which are executed via the codesys command line interface, see the online help for a description.Additionally, the script itsself can use system.ui methods to ask the user interactively for values like project names. I did attach a test script which shows the possible dialogs.

_________________Check out the CODESYS store: http://store.codesys.com/CODESYSÂ® a trademark of 3S-Smart Software Solutions GmbH Inspiring Automation Solutions

