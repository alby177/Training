Hello all,I have an array of x bytes. I want to process this data somewhere else in my program so I want to use pointers. I want to be able to increment the pointer address in an easy way. I know have the following code:______________________________________________________________________receivedData : ARRAY [0..MAX_RECEIVE_TCP_SERVER] OF BYTE;______________________________________________________________________processCommand( ADR(receivedData[6]) );______________________________________________________________________FUNCTION processCommand : BOOLVAR_INPUT	dataPtr : POINTER TO BYTE;END_VARVAR	channel: BYTE;	value: UINT;	state: BYTE;END_VAR--------------------------------------------------------------------------------------------------channel := dataPtr^;dataPtr := dataPtr + 1;value := dataPtr^;dataPtr := dataPtr + 1;value := value + (dataPtr^ * 256);dataPtr := dataPtr + 1;state := dataPtr^;dummyFunction(channel, value, state);______________________________________________________________________Is there an easier way to increment the pointer address? I would prefer to have something like this, but I don't know if this is possible: dummyFunction(dataPtr[0]^, dataPtr[1]^ + dataPtr[2]^ *256 , dataPtr[3]^);

Instead of defining a pointer to byte, define your pointer as:Code:dataPtr := POINTER TO ARRAY [0..MAX_RECEIVE_TCP_SERVER] OF BYTE;Then you can access your data with array indexing like you wish.

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

Thanks for your reply. Unfortunately, this is not possible (error 4110, '[<index>]' needs array variable). Other solutions, or is my implementation wrong: dummyFunction(dataPtr[0]^, dataPtr[1]^ + dataPtr[2]^ *256 , dataPtr[3]^);

I am not by my computer, but I believe you need to dereference before index: dataPtr^[1].

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

scott_cunningham wrote:I am not by my computer, but I believe you need to dereference before index: dataPtr^[1].Works! Unbelievable I didn't try that... Thanks very much!

If you get tired of dereferencing your pointer, you can use REFERENCE TO instead of POINTER TO. Check the help for more info.

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

