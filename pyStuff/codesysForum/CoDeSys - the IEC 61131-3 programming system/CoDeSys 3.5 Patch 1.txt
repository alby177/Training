Working with the demo to get to know CoDeSys.....used to Simatic SCL- Can the AT declaration only refer to absolute addresses? The S7 AT can refer to almost any type of memory, also FB and FC internal memory....nice feature by S7...can avoid pointers  - Is it possible to declare structures as "private" to FBs, or must structures always be declared as DUTs?  PS, seems to be a few bugs in the system?VAR_INPUT CONSTANT functionality in CFC seems not to work.....System crashes if a composer, selector, box is inserted in a CFC chart and immediately deleted...Setting execution order in paged CFC when no page is selected, erases all pages, seems to be no way to get them back....

yes same here you can AT %MB0

_________________shooter@home.nlcomputer shooterpaul deelenjacob van wassenaerstraat 29NL 5224 GG 's-Hertogenboschskype shooter paul.deelenphone +31736139136

Jeah, supected that.Would be nice if some overlaying without pointers emerged in some future version, seems like the norm in V3 addresses the issue.Likewise, private structures is a must, why not do it he Siemens way then something like this would be possible.....    sAlarms                                                     : STRUCT                        //Alarm Structure        b08                                                     : BOOL ;                        //[b08]         b09                                                     : BOOL ;                        //[b09]         b10                                                     : BOOL ;                        //[b10]         b11                                                     : BOOL ;                        //[b11]         b12                                                     : BOOL ;                        //[b12]         b13                                                     : BOOL ;                        //[b13]         b14                                                     : BOOL ;                        //[b14]         b15                                                     : BOOL ;                        //[b15]        bActionFault                                            : BOOL ;                        //[b00] Action Fault Alarm        bTransitFault                                           : BOOL ;                        //[b01] Transit High/Low Fault        bFeedbackFault                                          : BOOL ;                        //[b02] Feedback Fault        bExternalFault                                          : BOOL ;                        //[b03] External Fault - never latched        bPowerFault                                             : BOOL ;                        //[b04] Power Fault - never latched        bTransparent                                            : BOOL ;                        //[b05] Transparent alarm (i.e not XE) - never latched        bFeedbackWarning                                        : BOOL ;                        //[b06] Feedback Warning        bXA01                                                   : BOOL ;                        //[b07] Auxiliary Alarm 01    END_STRUCT ;        swAlarms AT sAlarms                                         : WORD;

