hello, allhow i can convert and save REAL to Byte[]? also from byte[] to REAL?I tested with SysMemCpy(), it goes in, but if the address of Byte[] elements are not continuous, then it might problem.br/listenyang

you are talking about two different thingsreal to byte is just REAL_TO_BYTEhowever you want to have the bytes this is done with pointers.

_________________shooter@home.nlcomputer shooterpaul deelenjacob van wassenaerstraat 29NL 5224 GG 's-Hertogenboschskype shooter paul.deelenphone +31736139136

If you are just looking to pack the real data into an array of bytes, the easiest path seems like it would be to create your real and your byte array at the same marker address.  Then they are actually at the same place in memory.

_________________nOrM
=====
nOrM = Norman Dziedzic Jr.

The most robust way is to use a UNION! Code:TYPE uRealBytes :  UNION    rValue : REAL;    // Needs 4 Bytes in memory    abValue:  ARRAY [0..3] OF BYTE;  END_UNIONEND_TYPEThen you kann fill in a real by "uRealByte.rValue := <some real>; In "uRealByte.abValue[n] you have the Bytes to copy to ...The conversion back is done in the same way.

Are there Unions in V2?  My brain doesn't think in V3 yet

_________________nOrM=====nOrM = Norman Dziedzic Jr.

shooter wrote:you are talking about two different thingsreal to byte is just REAL_TO_BYTEhowever you want to have the bytes this is done with pointers.thanks your reply, REAL need 4 bytes, so i need fill in a BYTE[0..3]， NOT into a single BYTE.

RudolfAtITD wrote:The most robust way is to use a UNION! Code:TYPE uRealBytes :  UNION    rValue : REAL;    // Needs 4 Bytes in memory    abValue:  ARRAY [0..3] OF BYTE;  END_UNIONEND_TYPEThen you kann fill in a real by "uRealByte.rValue := <some real>; In "uRealByte.abValue[n] you have the Bytes to copy to ...The conversion back is done in the same way.thanks you reply, this is great! 

I’m not familiar with UNION. But I like to test this.  Where do I define this Union type?I tried under “Data Types” but then I get the error  “unknown type:UNION”

union does exist in V3 not in V2.3

_________________shooter@home.nlcomputer shooterpaul deelenjacob van wassenaerstraat 29NL 5224 GG 's-Hertogenboschskype shooter paul.deelenphone +31736139136

This can easily be done be using fixed mapping to your variables.  Most CoDeSys controllers have fixed memory address.  If you map a REAL and Byte array to the same memory location it will all you read the REAL as individual bytes.  This method will work in all versions of CoDeSys.  Below is an example how:myReal         AT %MD0   : REAL;myByteArary AT %MB0 : ARRAY[0..3] OF BYTE; To give you a better understanding how the memory map works refer to my other post for an excel sheet. viewtopic.php?f=2&t=5045#p8228

_________________The Original SoMachine Ninja

I have made a simple yet flexible function which uses the pointer to memory trick, it uses a user defined struct for it to work.The code is made in CodesysV2.3 but will also work in Codesys V3 (but in V3 a Union is shorter though)Code:TYPE ST_BYTE_TO_REAL :STRUCT   B0:   BYTE;   B1:   BYTE;   B2:   BYTE;   B3:   BYTE;   REAL_OUT : POINTER TO REAL;END_STRUCTEND_TYPEThe function fills the STRUCT and returns the correct decimal number from the byte array with use of a pointer.Code:(* The function assumes that the 4 bytes are allready formatted according to IEEE Standard 754 Short Real Number *)FUNCTION BYTES_TO_REAL : REALVAR_INPUT   B3:   BYTE;   B2:   BYTE;   B1:   BYTE;   B0:   BYTE;END_VARVAR   CONVERT: ST_BYTE_TO_REAL;END_VAR(* Initialise POINTER to address of B0 *)CONVERT.REAL_OUT := ADR(CONVERT.B0);(* Fill bytes *)CONVERT.B0:=B0;CONVERT.B1:=B1;CONVERT.B2:=B2;CONVERT.B3:=B3;(* Return ptr^ (value at adress) *)BYTES_TO_REAL := CONVERT.REAL_OUT^;(* END *)The function can be adapted long reals (8 Bytes) or any other user specific need.Good luck!

the problem was in 2013, however it is a solution.have a look at oscat.de for more functions.

_________________shooter@home.nlcomputer shooterpaul deelenjacob van wassenaerstraat 29NL 5224 GG 's-Hertogenboschskype shooter paul.deelenphone +31736139136

