I'm having trouble getting to grips with the help system on CoDeSys, it tells you to do something but doesn't give an example of how it's done. I have experience in C, C++ and in assembley so I'm not exactly new at the whole coding thing but if I could get an example of a small program such as the traffic lights program then that would be a great help.
Thanks

never mind, I've sussed it out now, took me a day but It's not too dis simelar to the languages I've used before

Welcome Carmichael_keith,

If you are used to C and C++ then the Structured Text language will probably feel the most comfortable to you.

You can download a free version of the CoDeSys language from the 3S web site.  You will have to send them some information to get a password but you don't have to pay anything. http://www.3s-software.com/

There is some training informaion on Moeller devices here:
http://www.trainingscenter.moeller.net/basics.html

Note that the easySoft-CoDeSys and easyControl product is what you should look for there as the other products program in a different language.

One of the biggest differences between computer programming and controller programming has to do with what is usually called the "scan sequence" of the controllers.    The controllers, generally read physical input signals (pushbuttons, sensors, etc), then run through the program, and then set output devices (lights, valves, control signals).

Because of this, programs can never sit in a loop and wait for an action indefinately.  Indeed, most controllers include something called a watchdog timer that will fault the processor if the program does not get ot the end within a certain amount of time (usualy less than 0.1 sec).  In the ladder and function block programmign languages there is usually not a large problem with stuck loops but in Structured Text it can be a danger.

One nice thing about CoDeSys languages is that they include a simulation module that allows you to test code without being connected to a physical device.

_________________nOrM
=====
nOrM = Norman Dziedzic Jr.

