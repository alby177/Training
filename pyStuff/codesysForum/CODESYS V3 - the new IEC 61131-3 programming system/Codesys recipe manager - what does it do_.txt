I will probably use recipes in one form or another on a new system in the near future. I understand arrays and structures, would be able to just program something with that in ST. However it seems the recipe manager in Codesys 3 provides a readily available building block that takes some of the hassle away from building my own solution from scratch. I don't know if it is me, but I find the documentation for the recipe manager in v3 is very poor. It does not clarify to me what it does and how it can or should be used. I have downloaded the example from the store. That did little or nothing to improve my understanding. I find it messy and unclear to a new user. To me it just seems like a lot of boxes and buttons on one screen with little clarification of how they relate to one another and how it should be used. If I where a customer and my newly purchased machine came with this screen for handling recipes I would send it back for a makeover. Is there better documentation or better examples available to clarify what exactly the recipe manager does, and how it would add to or replace a self-made recipe system based on structures and arrays?

I've only used it to specify multiple sets of values for a group of variables at the initial testing stage.  Then you can activate* one of those groups at will.* by activate I mean write or force all those values at once.Imagine that you are testing your program and that you still doesn't have the HMI or the mechanics and electronics mounted.  Then you could simulate a bunch of variables to test your code.  With those recipes you can simply write all the values at once and you can have the values stored from the beginning to ease the task to prepare the simulations...Hope this clarifies it a little bit and helps.

_________________http://www.robotecnik.com - robots, CNC and PLC programming.

I understand that concept, and I would probably do that with a either a few arrays (one per variable) or an array of struct (all variables in one struct type). With an index in the array that I could move up or down at will to select an element. What I don't see clearly is which part of that is actually taken over by the recipe manager component, or whether the recipe manager adds an additional layer of functionality on top of a base storage structure with arrays. More so since the example project also contains arrays.

Can't help you with that... I've used the recipes manager only to do what I explained you... for more complex tasks I always program a small set of code to achieve that "unit test".I hope someone else will be able to clarify what you are after.Good luck!

_________________http://www.robotecnik.com - robots, CNC and PLC programming.

I agree with you, the documentation is very poor. I spent a month in order to properly understand how it works and now I think I have understand enough.The main functionality of the recipe manager is to import/export values from/to external files. You can find the configuration for those files in the "Recipe Manager" object in your application. This functions are available in visualization pages: add an input configuration to an object > "Execute command" > You can select between Load from file/Save to a file/Read Recipe/Write Recipe.If you want to fully manage the informations you can use the "Recipe Manual Commands". This object provides many functions to read, write, load and save data. I think the main idea of this system is to allow the user to modify data before download it to the Plc or save it to a file. For example you can use the recipe management in order to set parameters of a treatment. A recipe can contains informations about times, temperatures etc. With a recipe manager you can open a file that contains these parameters and modify them, only check their values, use them as basis for a new recipe etc. without download those informations into the Plc. In this situation you can perform these actions while the machine is running a process without modifying anything.Hope this could be helpful.

Thank you Massimo (and Joan, too). I had a suspicion this was the case. For now I will not waste my time on the recipe manager and build my system with just structures and arrays, and store the recipes in retain memory. I hope 3S see that this functionality is very poorly documented and demonstrated. There is much room for improvement here.

