Hi,Recently, I graduated with a degree in Mechatronics. I carried my curriculum internship and project at Festo and Bosch - Rexroth. At both firms, I used Codesys for PLC programming.I have been applying for entry-level positions at small/ medium size system integrators. Most of them use Allen-Bradley/ Siemens PLC. I was told to learn RsLogix and Step7.So, I have a few questions:1. Has anyone worked with all three packages?2. What are the major diferrences?3. Will my experience with Codesys be of any help?4. Is it possible to learn RsLogix and Step7 on my own?Thank you

I know there are people that have programmed in all three, but I think there are a lot more that program either RsLogix and CoDeSys or Siemens and CoDeSys.  I was hoping to see some comments, but I will at least give you my two cents...First, I would say the places you were applying to clearly didn't want to school you on Rockwell or Siemens software.  They wanted someone they could send to plant X and fix problem A.  Don't forget to look at control manufactures that make devices running CoDeSys - they need to support their customers who buy the product.CoDeSys is an IDE (development environment).  You have the choice of the six different programming languages for any of the "POU"s.RsLogix is Rockwell's (was Allen Bradley) IDE.  The PLCs program in ladder logic.  The people that recommended learning it are basically telling you, they want people who know their way around the Rockwell software platform and who can understand and program ladder logic.  Ladder logic thought process is hugely different than Structured Text.  In many cases, one ladder logic line is responsible for controlling a light, or a button response.  In ST, you may be using a CASE statement, a multiple of IF statements or some other technique to control that light.  Each solution has pros and cons.  People comfortable with ladder will tell you it is the way to go (there are a lot because of historical reasons).Step7 is Siemen's program.  It is similar to Instruction List (or shall we say assembly or machine code...).  The people that recommended learning it are telling you to get familiar with programming Siemens controllers.  I have never had any luck using it (but also haven't needed to use it).  But you will find plenty of installations using Siemens and plenty using Rockwell in the USA.Knowing CoDeSys will help in some ways.  I was told once that programming languages are a syntax, and it's not so important which language is used.  What is important, is your programming layout.  Bad programmers program badly in all languages.Learning RsLogix or Step7 by yourself will be difficult - the software and the hardware are not cheap to a Joe-Schmoe at quantity 1.  You may be better off working on LD and IL within CoDesys - write the same function block in all six languages.  Improve your problem solving skills and your programming style.  Try to find industry "best practices" - you find small articles in trade magazines.  Learn about what well documented code is (I call it the 3 year test - write code so in three years when you don't remember anything about the project, you can look at it and in 5 minutes understand what is going on)."Good" programmers are valuable - I've been around a few PLC "programmers" that created some pretty bad spaghetti code.

_________________Scott CunninghamKEB America, Inc.www.kebblog.comwww.kebamerica.com

scott_cunningham wrote:"Good" programmers are valuable - I've been around a few PLC "programmers" that created some pretty bad spaghetti code.Amen!From what I see I can agree with the content of the previous posts, but to add something to siemens:They are as far as I know also moving towards structured text, because IL is just... well..., its IL... There is a reason they invented C 50Years ago and write OS Kernels in it and not in assembler.There is also Studio 4 from B&R, Twincat has Visual Studio integration etc.In my oppinion all these software have pros and cons, however what ever you choose I would chose something that has good support in Structured Text. I have no clue how you want to build complex applications with ladder logic (we for example do SQL Selects, to update our HTML UI). Maybe there is something in ladder logic, but it would be pain... IL will be a mess to read and produce nice code, so go for Structured text and ignore the rest.Codesys is I think a very good start, in its core its free and a lot of vendors use codesys core functionality and extend it (for example wago). It also supports all 5 languages, and from what I can see they are try to push into modern application development and lifecycle approaches. (Codesys Testmanager, Python Integration, OOP Libraries).  But to be honest I only know codesys "well" even if im a beginner in PLC's the other ones I did not use myself to much.

