Hi,is it possible to create a testscript which runs mores than ones? I need a testrun with a lot cycles.Regards,Malcolm

Hi, Malcolm,Malcolm wrote:is it possible to create a testscript which runs mores than ones? I need a testrun with a lot cycles.Right now, TestScripts do not yet allow loops. We have some plans to implement this eventually, but it is not scheduled yet.Depending on the usage scenario, there are several possible workarounds which may apply to your situation:If you need a fixed number of iterations, separate the "inner loop" logic into a second test script, and then insert the appropriate number of CALLs of the second test script into the first one.You may be able to code your loop logic using the Python Scripting.If you want to assure the behaviour of a variable for a certain time, there are the "CheckConstant" and "CheckIncrement" test actions.In some cases, the "Max. retries" setting in the "Extended Settings" of the test action may suffice.If you need to test the behaviour of IEC code, you should also consider using the IEC Unit Test - those are a very powerful tool which allows you to code the test logic in IEC, including loops (implicitly via cycle task and explicitly) and whatever else you need.If your scenario is like "running the IEC Unit Test for all libraries in a given directory", consider using a script (e. g. CMD or Python) which iterates over the directory, and launches CODESYS for each of the libraries, passing the library path via a Environment Variable, which then can then be adressed via {$ENV.VARIABLENAME} within the test script. You can merge the test reports in XML format via XSLT if necessary.If none of those ideas fits your scenario, maybe you could give us some more details and we will try to find a solution. (If you don't want to give those details in public, you can contact our support department.)

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbH Inspiring Automation Solutions

Thanks for the detailed answer.In my case, using the Python Scripting would be the best solution. Unfortunately I never worked with the Python Scripting and I haven't any idea so far how to realize this.Regards,Malcolm

Hi.Malcolm wrote:In my case, using the Python Scripting would be the best solution. Unfortunately I never worked with the Python Scripting and I haven't any idea so far how to realize this.You can find four examples at the bottom of "Concepts and Base Components"/"Script Language" in the online help. Also the forum Script language Python in CODESYS V3 contains some examples.You find the documentation (ScriptEngine.chm) of the scripting interface in the sub directory "Online Help" of CODESYS.Regards,Martin

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbHInspiring Automation Solutions

Hi Martin,thanks for your help. Where can I find the the "projects."-object for the basicfunctions of the projectmanagement?Regards,Malcolm

Hi.Malcolm wrote:Where can I find the the "projects."-object for the basicfunctions of the projectmanagement?"projects" is an instance which is already present in the scope of the script engine. It's one of the entry points which are mentioned on the same page as the examples in the online help. The list isn't up-to-date but all required enumerations are also available.BR,Martin

_________________Check out the CODESYS store: http://store.codesys.com/CODESYS® a trademark of 3S-Smart Software Solutions GmbHInspiring Automation Solutions

